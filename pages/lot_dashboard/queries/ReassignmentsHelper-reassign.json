{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "reassign",
    "fullyQualifiedName": "ReassignmentsHelper.reassign",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "lot_dashboard",
    "collectionId": "lot_dashboard_ReassignmentsHelper",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "() => {\n  let data = Array.from(GetIndividualLot.data.assignments);\n  for (let e of Table2.updatedRows) {\n    data[ReassignmentsHelper.findIndex(e.id)].count = e.updatedFields.count;\n  }\n  storeValue('reassignment', data);\n  UpdateLotAssignments.run().then(() => GetIndividualLot.run());\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": false
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "() => {\n  let data = Array.from(GetIndividualLot.data.assignments);\n  for (let e of Table2.updatedRows) {\n    data[ReassignmentsHelper.findIndex(e.id)].count = e.updatedFields.count;\n  }\n  storeValue('reassignment', data);\n  UpdateLotAssignments.run().then(() => GetIndividualLot.run());\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "lot_dashboard_ReassignmentsHelper.reassign",
  "deleted": false,
  "gitSyncId": "6398fe0e4b95806da2daaf98_639ce4a47b3ff97723bec275"
}